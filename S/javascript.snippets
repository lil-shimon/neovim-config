# ---------------------------------------
#             console.log
# ---------------------------------------
snippet clg "console.log()" b
console.log(${1:'$2', $3});
endsnippet


# ---------------------------------------
#           import "" from ""
# ---------------------------------------
snippet imp "import from ''" b
import { $1 } from '$2';
endsnippet

# ---------------------------------------
#        import React from 'react'
# ---------------------------------------
snippet imr "import from ''" b
import React from 'react';
endsnippet


# ---------------------------------------
#        import React from 'react'
# ---------------------------------------
snippet ecr "export const" b
export const $1 = ($2) => {
		$3
		return (
				<>
						$4
				</>
		)
}
endsnippet


# ---------------------------------------
#        document.getElementById
# ---------------------------------------
snippet ele "document.getElementById" b
if (document.getElementById('$1')) {
    ReactDOM.render(<$2/>, document.getElementById('$1'))
}
endsnippet


# ---------------------------------------
#        useStyles (material ui)
# ---------------------------------------
snippet ustl "Material Ui useStyles" b
const useStyles = makeStyles((theme) => ({
    $1: {
        $2: '$3',
    },
}));
endsnippet


# ---------------------------------------
#        		styled-components
# ---------------------------------------
snippet styl "styled-components" b
const $1 = styled.$2`
		$3
`
endsnippet

# ---------------------------------------
#        my react base format
# ---------------------------------------
snippet reactbase "export const" b
import React from 'react'
export const $1 = ($2) => {
		$3
		return (
				<>
						$4
				</>
		)
}
endsnippet


# ---------------------------------------
#                if
# ---------------------------------------
snippet if "if" b
const $1 = ($2) ? $3 : $4;
endsnippet



# ---------------------------------------
#             classes (material)
# ---------------------------------------
snippet classes "classes for useStyles" b
const classes = useStyles($1);
endsnippet


# ---------------------------------------
#              block comment 
# ---------------------------------------
snippet cm "block comment" b
/** $1 */
endsnippet


# ---------------------------------------
#          expant block comment 
# ---------------------------------------
snippet cme "block comment" b
/**
 * $1
 * @param $2
 */
endsnippet

# ---------------------------------------
#           import makeStyles
# ---------------------------------------
snippet immakestyles "Description" b
import { makeStyles } from "@material-ui/core/styles";
endsnippet


# ---------------------------------------
#             React.Fragment
# ---------------------------------------
snippet rf "React.Fragment" b
<React.Fragment>
</React.Fragment>
endsnippet


# ---------------------------------------
#             jsx html
# ---------------------------------------
snippet jsx "html in jsx" b
<${1: className={$2}'}></$1>
endsnippet

# ---------------------------------------
#             useState
# ---------------------------------------
snippet us "useState" b
const [$1, $2] = useState($3);
endsnippet


# ---------------------------------------
#             useEffect
# ---------------------------------------
snippet ue "useEffect" b
useEffect (() => {
		$1
}, [$2])
endsnippet

# ---------------------------------------
#              handler
# ---------------------------------------
snippet handler "Description" b
const $1 = ($2) => {
		return $3;
}
endsnippet


# ---------------------------------------
#             array setstate
# ---------------------------------------
snippet setarr "setState for array" b
const $1 = (e, key) => {
    set$2((prev) => {
        return {
            ...prev,
            [key]: e.target.value
        }
    })
}
endsnippet

# ---------------------------------------
#            useStyles css 
# ---------------------------------------
snippet usecss "useStyles" b
$1: {
		$2: '';
}
endsnippet


# ---------------------------------------
#       add css line for useStyles
# ---------------------------------------
snippet addcss "add useStyles line" b
$1: '$2';
endsnippet

